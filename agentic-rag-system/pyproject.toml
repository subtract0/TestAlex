[project]
name = "agentic-rag-system"
version = "0.1.0"
description = "State-of-the-art RAG system with agentic capabilities using structured outputs"
authors = [
    { name = "Alex", email = "alex@example.com" }
]
dependencies = [
    # Core RAG & AI
    "instructor>=1.6.2",
    "openai>=1.54.0",
    "anthropic>=0.36.0",
    "lancedb>=0.14.0",
    "sentence-transformers>=3.0.1",
    "transformers>=4.45.0",
    
    # Data handling
    "pydantic>=2.9.0",
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "sqlmodel>=0.0.22",
    "datasets>=3.0.0",
    
    # CLI & UI
    "typer>=0.12.0",
    "rich>=13.7.0",
    "streamlit>=1.38.0",
    "fastapi>=0.115.0",
    "uvicorn>=0.32.0",
    
    # Evaluation & Monitoring
    "braintrust>=0.0.147",
    "loguru>=0.7.0",
    "prometheus-client>=0.21.0",
    
    # Document processing
    "pypdf>=4.3.1",
    "python-docx>=1.1.2",
    "pillow>=10.4.0",
    "beautifulsoup4>=4.12.0",
    
    # Vector & search
    "faiss-cpu>=1.8.0",
    "bertopic>=0.16.4",
    "rank-bm25>=0.2.2",
    
    # Async & HTTP
    "httpx>=0.27.0",
    "asyncio-throttle>=1.0.2",
    "aiofiles>=24.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.6.9",
    "pyright>=1.1.384",
    "ipython>=8.29.0",
    "jupyter>=1.1.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["agentic_rag"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]  # Line too long

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[project.scripts]
rag = "agentic_rag.cli:app"
